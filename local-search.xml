<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java 学习笔记</title>
    <link href="/2023/08/16/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/08/16/Java-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Java-学习笔记"><a href="#Java-学习笔记" class="headerlink" title="Java 学习笔记"></a>Java 学习笔记</h1><h2 id="一-Java概述"><a href="#一-Java概述" class="headerlink" title="一.Java概述"></a>一.Java概述</h2><h3 id="1-程序设计语言发展及分类"><a href="#1-程序设计语言发展及分类" class="headerlink" title="1.程序设计语言发展及分类"></a>1.程序设计语言发展及分类</h3><h4 id="按发展历程分类"><a href="#按发展历程分类" class="headerlink" title="按发展历程分类"></a>按发展历程分类</h4><ul><li>机器语言:计算机直接识别的语言,0&#x2F;1代码   </li><li>汇编语言:低级语言,使用助记符代替0&#x2F;1    </li><li>高级语言:采用命令或者语句的语言,例如:c,c++,java</li></ul><h4 id="按思维模式分类"><a href="#按思维模式分类" class="headerlink" title="按思维模式分类"></a>按思维模式分类</h4><ul><li>面向过程的程序设计语言,例如c语言</li><li>面向对象的程序设计语言,例如Java,c++</li></ul><h4 id="按执行方式分类"><a href="#按执行方式分类" class="headerlink" title="按执行方式分类"></a>按执行方式分类</h4><ul><li>编译执行语言,如C语言</li><li>解释执行语言,如Java语言</li></ul><h3 id="2-Java语言的特色"><a href="#2-Java语言的特色" class="headerlink" title="2.Java语言的特色"></a>2.Java语言的特色</h3><ul><li>年轻的语言:1995年诞生</li><li>简单性:语法上类似C++,取消了C++的一些复杂而低效的特性</li><li>面向对象的语言:继承,封装,多态</li><li>分布式</li><li>健壮性:编译和运行时检查程序错误,Java自己操作内存,减少了内存出错的可能性</li><li>安全性:c++的指针和释放内存等功能被删除,避免了非法内存操作</li><li>可移植性:可在配备了Java解释器(Java虚拟机)和运行环境的任何计算系统上运行</li><li>解释运行:运行速度较慢,高版本的Java速度较快</li><li>多线程:在一个程序里,可同时执行多个小程序</li></ul><h3 id="3-Java有关术语"><a href="#3-Java有关术语" class="headerlink" title="3.Java有关术语"></a>3.Java有关术语</h3><h4 id="Java三大版本"><a href="#Java三大版本" class="headerlink" title="Java三大版本"></a>Java三大版本</h4><ul><li>JavaSE:标准版(桌面程序,控制台开发…)</li><li>JavaME:嵌入式开发(手机,小家电…)</li><li>JavaEE:E企业级开发(web端,服务器开发)</li></ul><h4 id="Java术语"><a href="#Java术语" class="headerlink" title="Java术语"></a>Java术语</h4><ul><li>JDK #Java语言开发包,由Java创造者Sun公司发布</li><li>SDK #Java语言软件开发包,从v1.2起jdk就称作SDK. 不严格区分时,常把JDK和SDK都叫做JDK</li><li>JRE #Java运行环境</li><li>JVM #Java虚拟机 Java的字节码运行再Java虚拟机上</li></ul><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Java源程序<span class="hljs-comment">(.java)</span>  <br>    ⬇编译    <br>字节码程序<span class="hljs-comment">(.class)</span>  <br>    ⬇解释运行     <br>  解释器<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 学习笔记</title>
    <link href="/2023/08/15/Git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/08/15/Git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Git-学习笔记"><a href="#Git-学习笔记" class="headerlink" title="Git 学习笔记"></a>Git 学习笔记</h1><h2 id="1-为何学习Git"><a href="#1-为何学习Git" class="headerlink" title="1.为何学习Git?"></a>1.为何学习Git?</h2><p>管理代码版本,记录,切换,合并代码</p><h2 id="2-Git仓库-repository"><a href="#2-Git仓库-repository" class="headerlink" title="2.Git仓库(repository)"></a>2.Git仓库(repository)</h2><p>记录文件状态内容的地方,存储着修改的历史记录(.git文件夹)  </p><p>创建:</p><ul><li>把本地文件夹转换成Git仓库:命令 <code>git init</code></li><li>从其他服务器上克隆Git仓库</li></ul><h2 id="3-Git的三个区域"><a href="#3-Git的三个区域" class="headerlink" title="3.Git的三个区域"></a>3.Git的三个区域</h2><p>Git使用时:  </p><ul><li>工作区:实际开发时操作的文件夹</li><li>暂存区:保存之前的准备区域(暂存改动过的文件)  </li><li>版本库:提交并保存暂存区中的内容,产生一个版本快照</li></ul><p>命令和作用:</p><ul><li>暂存指定文件:<code>git add 文件名</code></li><li>暂存所有改动的文件: <code>git add .</code></li><li>提交并保存,产生版本快照:<code>git commit -m &quot;注释说明&quot;</code></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo 学习笔记</title>
    <link href="/2023/08/15/hexo-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/08/15/hexo-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-学习笔记"><a href="#hexo-学习笔记" class="headerlink" title="hexo 学习笔记"></a>hexo 学习笔记</h1><h2 id="1-hexo命令"><a href="#1-hexo命令" class="headerlink" title="1.hexo命令"></a>1.hexo命令</h2><ul><li>hexo new “标题” #创建新的文章</li><li>hexo clean #清理</li><li>hexo g#生成静态页面</li><li>hexo s#启动本地博客服务</li><li><a href="http://localhost:4000/">http://localhost:4000/</a>#本地访问地址</li><li>ctrl+c  #结束本地博客服务</li><li>hexo d#部署到远程Github仓库</li></ul><h2 id="2-MarkDown语法"><a href="#2-MarkDown语法" class="headerlink" title="2.MarkDown语法"></a>2.MarkDown语法</h2><pre><code class="hljs">#一级标题##二级标题  ###三级标题**粗体***斜体****斜体加粗***~~删除线~~&gt;引用---分割线***分割线![图片名字](图片路径)[超链接名字](链接地址)有序列表 1.无序列表 -空格代码```   (反引号)</code></pre><h2 id="3-Dos命令"><a href="#3-Dos命令" class="headerlink" title="3.Dos命令"></a>3.Dos命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#盘符切换   D:</span><br><span class="hljs-comment">#查看当前目录下的所有文件   dir</span><br><span class="hljs-comment">#切换目录   cd change directory</span><br>    返回上一级<span class="hljs-built_in">cd</span>..<br>    <br><span class="hljs-comment">#清理屏幕 cls clear screen</span><br><span class="hljs-comment">#退出终端 exit</span><br><span class="hljs-comment">#查看电脑ip ipconfig</span><br><span class="hljs-comment">#ping 命令</span><br><br><span class="hljs-comment">#文件操作</span><br>    <span class="hljs-built_in">md</span> 目录名  创建目录<br>    <span class="hljs-built_in">rd</span> 目录名  删除目录<br>    <span class="hljs-built_in">cd</span>&gt; 文件名 创建文件<br>    <span class="hljs-built_in">del</span> 文件名 删除文件<br></code></pre></td></tr></table></figure><h2 id="4-python实现自动推送到Git"><a href="#4-python实现自动推送到Git" class="headerlink" title="4.python实现自动推送到Git"></a>4.python实现自动推送到Git</h2><p>其实就是把几个命令行一起写在python中</p><pre><code class="hljs">import os# 切换到博客目录（根据实际路径进行修改）blog_path = &quot;D:/AAAblog&quot;os.chdir(blog_path)# 清理print(&quot;--------------------正在清理中--------------------&quot;)return_code = os.system(&quot;hexo clean&quot;)if return_code == 0:print(&quot;清理成功&quot;)else:print(&quot;清理失败&quot;)# 生成静态文件print(&quot;--------------------生成静态文件中--------------------&quot;)return_code = os.system(&quot;hexo generate&quot;)if return_code == 0:print(&quot;生成静态文件成功&quot;)else:print(&quot;生成静态文件失败&quot;)# 部署到线上print(&quot;--------------------正在部署到Git中--------------------&quot;)return_code = os.system(&quot;hexo deploy&quot;)if return_code == 0:print(&quot;部署到Git成功&quot;)else:print(&quot;部署到Git失败&quot;)# 等待用户按下回车键input(&quot;按回车键退出...&quot;)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
